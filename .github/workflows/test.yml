name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'
env:
  OSS_ACCESS_KEY_ID: ${{ secrets.OSS_ACCESS_KEY_ID }}
  OSS_ACCESS_KEY_SECRET: ${{ secrets.OSS_ACCESS_KEY_SECRET }}

jobs:
  build: # make sure build/ci work properly
    name: 'Build and test this repo'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Checkout Oneflow-Inc/oneflow
        uses: actions/checkout@v2
        with:
          repository: Oneflow-Inc/oneflow
          path: ~/oneflow-src
      - run: |
          npm install
      - run: |
          npm run all

  cancel_previous:
    name: Cancel previous runs
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs of outdated commit
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
          all_but_latest: true

  mirror-tools: # make sure the action works on a clean machine without building
    name: 'Mirror tools to OSS'
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: ./mirror
        if: ${{ env.OSS_ACCESS_KEY_ID }}
        name: Mirror tools

  test-build-img:
    name: 'Build image'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        os: [['self-hosted', 'linux', 'provision'], [ubuntu-latest]]
    steps:
      - name: Fix permissions
        if: ${{ contains(matrix.os, 'self-hosted') }}
        run: |
          set -x
          docker run --rm -v $PWD:/p -w /p busybox chown -R $(id -u):$(id -g) .
      - uses: actions/checkout@v2
      - uses: ./manylinux
        name: Test build manylinux
        with:
          self-hosted: ${{ contains(matrix.os, 'self-hosted') }}

  test-build-oneflow:
    name: 'Build OneFlow Conda'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        oneflow-build-env: ['conda', 'manylinux']
        os: [['self-hosted', 'linux', 'provision'], [ubuntu-latest]]
        docker-run-use-system-http-proxy: [false]
    env:
      ONEFLOW_SRC: oneflow-src-${{ matrix.oneflow-build-env }}
    steps:
      - name: Fix permissions
        if: ${{ contains(matrix.os, 'self-hosted') }}
        run: |
          set -x
          docker run --rm -v $PWD:/p -w /p busybox chown -R $(id -u):$(id -g) .
      - name: Remove leftover cuda-installer.log
        if: ${{ contains(matrix.os, 'self-hosted') }}
        run: |
          docker run --rm -v /tmp:/host/tmp -w /p busybox rm -f /host/tmp/cuda-installer.log
      - uses: actions/checkout@v2
      - name: Checkout Oneflow-Inc/oneflow
        uses: actions/checkout@v2
        with:
          repository: Oneflow-Inc/oneflow
          ref: refine_for_new_ci
          path: ${{ env.ONEFLOW_SRC }}
      - name: Checkout Oneflow-Inc/conda-env
        uses: actions/checkout@v2
        with:
          repository: Oneflow-Inc/conda-env
          ref: 9cd37571cbd6cc6a81fc87faa7f6a43be772ae31
          path: conda-env
      - uses: ./
        name: Test conda on gh-hosted
        if: ${{ contains(matrix.os, 'ubuntu-latest') && matrix.oneflow-build-env == 'conda'}}
        with:
          cmake-init-cache: ${{ env.ONEFLOW_SRC }}/cmake/caches/cn/fast/cpu-clang.cmake
          oneflow-src: ${{ env.ONEFLOW_SRC }}
          oneflow-build-env: conda
          conda-env-file: conda-env/dev/clang10/environment-v2.yml
      - uses: ./
        name: Test conda on self-hosted
        if: ${{ contains(matrix.os, 'self-hosted') && matrix.oneflow-build-env == 'conda'}}
        with:
          cmake-init-cache: ${{ env.ONEFLOW_SRC }}/cmake/caches/cn/fast/cpu-clang.cmake
          oneflow-src: ${{ env.ONEFLOW_SRC }}
          oneflow-build-env: conda
          conda-env-file: conda-env/dev/clang10/environment-v2.yml
          conda-installer-url: https://oneflow-static.oss-cn-beijing.aliyuncs.com/downloads/conda-installers/Miniconda3-py39_4.10.3-Linux-x86_64.sh
          conda-prefix: ~/miniconda3-prefixes/py39_4.10.3
          self-hosted: ${{ contains(matrix.os, 'self-hosted') }}

  find-build-cache:
    name: 'Find cache'
    runs-on: [ubuntu-latest]
    env:
      ONEFLOW_SRC: oneflow-src
    outputs:
      matrix: ${{ steps.find-cache.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - name: Checkout Oneflow-Inc/oneflow
        uses: actions/checkout@v2
        with:
          repository: Oneflow-Inc/oneflow
          ref: refine_for_new_ci
          path: oneflow-src
      - uses: ./cache-complete/matrix
        name: find cache
        id: find-cache
        with:
          runner-labels: |
            self-hosted
            linux
            provision
          oneflow-src: ${{ env.ONEFLOW_SRC }}
          entries: |
            cu114
            cpu-only
            cu102-xla

  test-build-manylinux:
    name: 'Build OneFlow manylinux'
    runs-on: ${{ matrix.runs-on }}) }}
    needs: [find-build-cache]
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix: ${{ fromJson(needs.find-build-cache.outputs.matrix) }}
    env:
      ONEFLOW_SRC: oneflow-src
    steps:
      - name: Fix permissions
        if: ${{ contains(matrix.runs-on, 'self-hosted') }}
        run: |
          set -x
          docker run --rm -v $PWD:/p -w /p busybox chown -R $(id -u):$(id -g) .
      - name: Remove leftover cuda-installer.log
        if: ${{ contains(matrix.runs-on, 'self-hosted') }}
        run: |
          docker run --rm -v /tmp:/host/tmp -w /p busybox rm -f /host/tmp/cuda-installer.log
      - name: Checkout this repo
        uses: actions/checkout@v2
      - name: Checkout Oneflow-Inc/oneflow
        uses: actions/checkout@v2
        with:
          repository: Oneflow-Inc/oneflow
          ref: refine_for_new_ci
          path: ${{ env.ONEFLOW_SRC }}
      - uses: ./cache-complete
        name: Save cache if successful
        id: save-cache
        with:
          oneflow-src: ${{ env.ONEFLOW_SRC }}
          mark-as-completed: ${{ contains(matrix.runs-on, 'self-hosted') }}]}
          check-not-completed: ${{ contains(matrix.runs-on, 'self-hosted') }}]}
      - name: Check cache
        if: ${{ steps.save-cache.outputs.cache-hit != matrix.cache-hit }}
        run: |
          echo "::error file=test.yml,line=204,col=10::steps.save-cache.outputs.cache-hit != matrix.cache-hit"
          exit 1
      - uses: ./
        name: Build manylinux cpu only
        if: ${{ matrix.entry =='cpu-only' && !matrix.cache-hit }}
        with:
          cmake-init-cache: ${{ env.ONEFLOW_SRC }}/cmake/caches/ci/cpu-only.cmake
          build-script: ${{ env.ONEFLOW_SRC }}/ci/manylinux/build.sh
          oneflow-src: ${{ env.ONEFLOW_SRC }}
          oneflow-build-env: manylinux
          wheelhouse-dir: manylinux-wheelhouse
          self-hosted: ${{ contains(matrix.runs-on, 'self-hosted') }}
          cuda-version: none
          manylinux-cache-dir: ~/manylinux-cache-dir/cpu-only
          docker-run-use-system-http-proxy: false
          docker-run-use-lld: true
          retry-failed-build: true
          python-versions: |
            3.6
            3.7
            3.8
            3.9
      - uses: ./
        name: Build manylinux cu114
        if: ${{ matrix.entry =='cu114' && !matrix.cache-hit }}
        with:
          cmake-init-cache: ${{ env.ONEFLOW_SRC }}/cmake/caches/ci/cuda.cmake
          build-script: ${{ env.ONEFLOW_SRC }}/ci/manylinux/build.sh
          oneflow-src: ${{ env.ONEFLOW_SRC }}
          oneflow-build-env: manylinux
          wheelhouse-dir: manylinux-wheelhouse
          self-hosted: ${{ contains(matrix.runs-on, 'self-hosted') }}
          cuda-version: 11.4
          manylinux-cache-dir: ~/manylinux-cache-dir/cpu-only
          docker-run-use-system-http-proxy: false
          docker-run-use-lld: true
          python-versions: |
            3.6
            3.7
            3.8
            3.9
      - uses: ./
        name: Build manylinux cu102-xla
        if: ${{ matrix.entry =='cu102-xla' && !matrix.cache-hit }}
        with:
          cmake-init-cache: ${{ env.ONEFLOW_SRC }}/cmake/caches/ci/cuda-xla.cmake
          build-script: ${{ env.ONEFLOW_SRC }}/ci/manylinux/build-gcc7.sh
          oneflow-src: ${{ env.ONEFLOW_SRC }}
          oneflow-build-env: manylinux
          wheelhouse-dir: manylinux-wheelhouse
          self-hosted: ${{ contains(matrix.runs-on, 'self-hosted') }}
          cuda-version: 10.2
          manylinux-cache-dir: ~/manylinux-cache-dir/cpu-only
          docker-run-use-system-http-proxy: true
          docker-run-use-lld: true
          python-versions: |
            3.6
            3.7
            3.8
            3.9

  check-build-cache:
    name: 'Check manylinux build cache'
    runs-on: [ubuntu-latest]
    needs: [test-build-manylinux]
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        entry: ['cu102-xla', 'cu114', 'cpu-only']
    env:
      ONEFLOW_SRC: oneflow-src
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v2
      - name: Checkout Oneflow-Inc/oneflow
        uses: actions/checkout@v2
        with:
          repository: Oneflow-Inc/oneflow
          ref: refine_for_new_ci
          path: ${{ env.ONEFLOW_SRC }}
      - uses: ./cache-complete
        name: find cache
        id: find-cache
        with:
          runner-labels: |
            self-hosted
            linux
            provision
          oneflow-src: ${{ env.ONEFLOW_SRC }}
          entry: ${{ matrix.entry }}
          mark-as-completed: false
      - name: Check built
        if: ${{ !steps.find-cache.outputs.cache-hit }}
        run: |
          exit 1
